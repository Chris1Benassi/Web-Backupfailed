---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    const paths = posts.map((post) => {
        const slug = post.id.replace(/_/g, '-'); // Generate slug from post ID
        console.log(`Generated slug: ${slug}`); // Debugging
        return { params: { slug } };
    });
    return paths;
}

const { slug } = Astro.params;
const post = await getEntry('posts', slug);

if (!post) {
    throw new Error(`Post not found for slug: ${slug}`);
}

interface PostRendered {
    Content: any;
    data: {
        title: string;
        date: string;
        tags: string[];
    };
}

const { Content, data } =
    post.rendered && 'Content' in post.rendered && 'data' in post.rendered
        ? (post.rendered as PostRendered)
        : { Content: null, data: { title: '', date: '', tags: [] } }; // Safely access rendered content
---

<Layout title={data.title}>
    <article class="max-w-4xl mx-auto px-6 py-12">
        <h1 class="text-4xl font-bold mb-4">{data.title}</h1>
        <p class="text-gray-500 mb-4">{data.date}</p>
        <div class="flex flex-wrap gap-2 mb-8">
            <div class="flex flex-wrap gap-2 mb-8">
                {data.tags.map((tag) => <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded">{tag}</span>)}
            </div>
            {Content}
        </div>
    </article>
</Layout>
