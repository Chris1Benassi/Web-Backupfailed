---
import { getCollection, getEntry, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    const paths = posts.map((post) => {
        const slug = post.data.slug || post.id.replace(/_/g, '-');
        return { params: { slug }, props: { post } };
    });
    return paths;
}

const { slug } = Astro.params;
const { post } = Astro.props;

if (!post) {
    throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await render(post);
const { data } = post;

interface PostRendered {
    Content: any;
    data: {
        title: string;
        date: string;
        tags: string[];
    };
}
---

<Layout title={data.title}>
    <article
        class="prose max-w-6xl mx-auto px-6 py-20 mt-20 rounded-2xl shadow-2xl bg-sky-900 dark:bg-sky-900 backdrop-blur-md border border-gradient-to-r from-blue-400 to-purple-500 transition-all duration-500 hover:scale-[1.015] hover:shadow-[0_8px_32px_0_rgba(31,38,135,0.37)] hover:border-blue-500"
    >
        <h1
            class="text-4xl font-bold mb-4 transition-colors duration-300 hover:text-transparent hover:bg-clip-text hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-500"
        >
            {data.title}
        </h1>
        <p class="text-gray-500 mb-4">{data.date}</p>
        <div class="flex flex-wrap gap-2 mb-4">
            {
                data.tags.map((tag) => (
                    <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded transition-all duration-300 hover:bg-gradient-to-r hover:from-blue-400 hover:to-purple-400 hover:text-white hover:scale-110 shadow-sm cursor-pointer">
                        {tag}
                    </span>
                ))
            }
        </div>
        <Content />
    </article>
</Layout>
